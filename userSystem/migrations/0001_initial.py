# Generated by Django 5.1.6 on 2025-02-18 19:12

import django.core.validators
import userSystem.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=150, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, default='', max_length=15, validators=[django.core.validators.RegexValidator(message='Telefon numarası geçerli bir formatta olmalıdır.', regex='^\\+?1?\\d{9,15}$')])),
                ('tckn', models.CharField(blank=True, max_length=11, validators=[userSystem.models.validate_tckn])),
                ('address', models.TextField(blank=True, null=True)),
                ('profile_picture', models.FileField(blank=True, default='profile_images/default.png', null=True, upload_to=userSystem.models.user_profile_picture_path, validators=[userSystem.models.validate_file_size])),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('staff', 'Personel'), ('member', 'Üye')], default='member', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user_tablosu',
            },
        ),
    ]
